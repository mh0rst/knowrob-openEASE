{
    "query": [
        {
            "q": "",
            "text": "----- Initialize Setup -----"
        },
        {
            "q": "mng_db('simulation').",
            "text": "Select experiment database"
        },
        {
            "q": "load_experiment('/home/ros/knowrob_data/logs/simulation/pancakemaking_full/sim_exp1.owl').",
            "text": "Load data from one pancake-making simulation from library"
        },
        {
            "q": "load_experiment('/home/ros/knowrob_data/logs/simulation/pancakemaking_full/sim_exp2.owl').",
            "text": "Load data from Experiment 2"
        },
         {
            "q": "load_experiment('/home/ros/knowrob_data/logs/simulation/pancakemaking_full/sim_exp3.owl').",
            "text": "Load data from Experiment 3"
        },
         {
            "q": "load_experiment('/home/ros/knowrob_data/logs/simulation/pancakemaking_full/sim_exp4.owl').",
            "text": "Load data from Experiment 4"
        },
        {
            "q": "owl_parse('package://knowrob_sim/owl/simulation_map.owl').",
            "text": "Load semantic map"
        },
        {
            "q": "owl_individual_of(A, knowrob:'SemanticEnvironmentMap'), !, add_object_with_children(A).",
            "text": "Visualize semantic map"
        },
        {
            "q": "",
            "text": ""
        },
        {
            "q": "",
            "text": "----- Queries on Simulation Data -----"
        },
        {
            "q": "simact_contact('Pancake1', Event, knowrob:'Cup', Obj), simact_start(Exp, Event,Start), simact_end(Exp, Event, End).",
            "text": "In which contact intervals was the Cup involved during experiment 1?"
        },
        {
            "q": "simlift_liftonly(Exp, knowrob:'Cup', Start, End).",
            "text": "Which instances of Cups being lifted are available?"
        },
        {
            "q": "nb_setval(counter,0x0000ff), simlift_liftonly(Exp, knowrob:'Cup', Start, End), add_count(0x404000), add_trajectory('Cup', Start, End, 0.5,3), nb_getval(counter,Val), highlight_trajectory('Cup', Start, End, Val).",
            "text": "Show the trajectories of Cups being lifted for all available experiments"
        },
        {
            "q": "simflipping(Exp, Object,Tool,Target,_,_,_,_,_).",
            "text": "In which experiments did flipping occur?"
        },
        {
            "q": "simflipping('Pancake1', Object,Tool,Target,ToolGrasped, ToolContactObject, ObjectLifted, ObjectFlipped, ToolReleased), add_trajectory('Spatula', ToolGrasped, ToolReleased, 0.5,3).",
            "text": "Show the trajectory of the Spatula for the flipping interval during experiment 1"
        },
        {
            "q": "simflipping('Pancake1',_,_,_,ToolGrasped, ToolContactObject, ObjectLifted, ObjectFlipped, ToolReleased), highlight_trajectory('Spatula', ToolContactObject, ObjectFlipped, 'ff0000').",
            "text": "Highlight the trajectory of the Spatula while it's in contact with the Pancake "
        },
        {
            "q": "simflipping('Pancake1',_,_,_,ToolGrasped, ToolContactObject, ObjectLifted, ObjectFlipped, ToolReleased), highlight_trajectory('Spatula', ObjectFlipped, ToolReleased, 'ff8000').",
            "text": "Highlight the trajectory of the Spatula after flipping the Pancake "
        },
        {
            "q": "remove_highlight('Spatula'), remove_highlight('Cup'), simlift_liftonly('Pancake4', knowrob:'Cup', Start, End), highlight_trajectory('Cup', Start, End, '0080ff').",
            "text": "Highlight the trajectory of the Cup in experiment 4 and remove highlighting of the Spatula"
        },
        {
            "q": "simflip_full('Pancake1', knowrob:'LiquidTangibleThing', knowrob:'Spatula', knowrob:'PancakeMaker', Start, End, _, _, _), add_trajectory('LiquidTangibleThing', Start, End, 0.2,2).",
            "text": "Visualize trajectory of the Pancake during flipping in experiment 1"
        },
        {
            "q": "simflip_fliponly('Pancake1', knowrob:'LiquidTangibleThing', knowrob:'Spatula', knowrob:'PancakeMaker', Start, End, _, _, _), highlight_trajectory('LiquidTangibleThing', Start, End, '00FF00').",
            "text": "Highlight trajectory of the Pancake while it's on the Spatula in experiment 1"
        },
        {
            "q": "clear_canvas.",
            "text": "Clear canvas"
        },
        {
            "q": "",
            "text": ""
        },
        {
            "q": "",
            "text": "----- Logfile Statistics -----"
        },
        {
            "q": "diagram_canvas.",
            "text": "Initialize diagram canvas"
        },
        {
            "q": "rdf_has(_, knowrob:'experimentName', literal(type(_, Expname))), string_concat(Expname, ' Timeline', Title), findall(Type, (simact(E, T), rdf_split_url(_,Type,T)), X), sim_timeline_val(X, Times), add_diagram(diagram_id2, 'Title', timeline, 'Time', 'Events', 300, 300, '12px', [[['X'],['Times']]]).",
            "text": "Show event timeline in the chart"
        }
    ]
}